class i{width;height;pixelRatio;aspect;onChange;static _instance;constructor(){this.width=window.innerWidth,this.height=window.innerHeight,this.pixelRatio=Math.min(2,window.devicePixelRatio),this.aspect=this.width/this.height,this.onChange=function(){},i._instance=this,window.addEventListener("resize",function(){i._instance.changeSize(),i._instance.onChange()})}static getInstance(){return i._instance||(this._instance=new this)}changeSize(){this.width=window.innerWidth,this.height=window.innerHeight,this.pixelRatio=Math.min(2,window.devicePixelRatio),this.aspect=this.width/this.height}onResize(t){this.onChange=t}}class n{x;y;offsetX=0;offsetY=0;onChange;static _instance;constructor(){this.x=0,this.y=0,this.offsetX=0,this.offsetY=0,this.onChange=function(){},n._instance=this,window.addEventListener("pointermove",function(t){n._instance.onMove(t),n._instance.onChange()})}static getInstance(){return n._instance||(this._instance=new this)}setOnChange(t){this.onChange=t}updateOffset(t,e){this.offsetX=t,this.offsetY=e}onMove(t){t.isPrimary!==!1&&(this.x=t.clientX-this.offsetX,this.y=t.clientY-this.offsetY)}}export{n as Mouse,i as Size};
